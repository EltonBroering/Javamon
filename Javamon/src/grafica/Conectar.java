package grafica;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Conectar.java
 *
 * Created on 18/11/2013, 06:49:01
 */
/**
 *
 * @author Elton e Flavia<br>
 * <p>
 * Tela aberta quando clicado para conectar em um servidor ja criado, ela possui as opcoes de nome e ip no qual quer se conectar
 * </p>
 */
public class Conectar extends javax.swing.JDialog {

    /** Creates new form Conectar */
	/**
	 * 
	 * @param parent Classe pai, onde o Dialog é chamado
	 * @param modal
	 */
    public Conectar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }
    boolean controle=false;
    
    /**
     * Funcao de controle.
     * @return boolean de controle
     */
    public boolean getControle(){
    	return controle;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLConectar = new javax.swing.JLabel();
        jLNameConectar = new javax.swing.JLabel();
        jLIpConectar = new javax.swing.JLabel();
        jBConectar = new javax.swing.JButton();
        jTNameConectar = new javax.swing.JTextField();
        jTNameConectar.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
                jBConectarActionPerformed(e);
        	}
        });
        jTIpConectar = new javax.swing.JTextField();
        jTIpConectar.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
                jBConectarActionPerformed(e);
        	}
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLConectar.setFont(new java.awt.Font("Dialog", 0, 48));
        jLConectar.setForeground(new java.awt.Color(-65536,true));
        jLConectar.setText("Conectar");

        jLNameConectar.setFont(new java.awt.Font("Dialog", 0, 24));
        jLNameConectar.setText("Nome:");

        jLIpConectar.setFont(new java.awt.Font("Dialog", 0, 24));
        jLIpConectar.setText("IP:");

        jBConectar.setText("Conectar");
        jBConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConectarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLNameConectar)
                            .addComponent(jLIpConectar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTIpConectar, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                            .addComponent(jTNameConectar, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                            .addComponent(jLConectar))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBConectar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLConectar)
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNameConectar)
                    .addComponent(jTNameConectar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTIpConectar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLIpConectar))
                .addGap(26, 26, 26)
                .addComponent(jBConectar)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
 * Funcao que é chamada quando o botão conectar é acionado, ela só deixa prosseguir se o nome e o IP estiverem selecionados.
 */
private void jBConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConectarActionPerformed
    
    if(jTNameConectar.getText().isEmpty() || jTIpConectar.getText().isEmpty()){
        JOptionPane.showMessageDialog(this,"Nome não preenchido ou IP não preenchido");
    }else{
    	controle=true;
    	this.setVisible(false);
    }
    
    
}//GEN-LAST:event_jBConectarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conectar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conectar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conectar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conectar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Conectar dialog = new Conectar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBConectar;
    private javax.swing.JLabel jLConectar;
    private javax.swing.JLabel jLIpConectar;
    private javax.swing.JLabel jLNameConectar;
    private javax.swing.JTextField jTIpConectar;
    private javax.swing.JTextField jTNameConectar;
    // End of variables declaration//GEN-END:variables
	
	//Função que retorna o parametro do campo nome
	public JTextField getJTNameConectar() {
		return jTNameConectar;
	}
	//Função que retorna o parametro do campo IP
	public JTextField getJTIpConectar() {
		return jTIpConectar;
	}
}
