package grafica;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.Icon;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.border.SoftBevelBorder;
import javax.swing.border.BevelBorder;
import javax.swing.border.LineBorder;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import java.awt.Canvas;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.SystemColor;
import javax.swing.border.EmptyBorder;
import javax.swing.border.EtchedBorder;
import javax.swing.JTextArea;
import javax.swing.DropMode;
import javax.swing.JScrollPane;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

import poo.Mensagem;

/*
 * Selecao.java
 *
 * Created on 25/11/2013, 23:27:17
 */
/**
 *
 * @author Elton e Flavia<br>
 *<p>
 *Classe que contem a tela de selecao dos pokemons
 *</p>
 */
public class Selecao extends javax.swing.JPanel {

   TelaPrincipal tela;
   String Mensagens;
    public Selecao(TelaPrincipal t) {
        initComponents();
        this.tela=t;
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPselecao = new javax.swing.JPanel();
        jPselecao.setBorder(null);
        jBPonyta = new javax.swing.JButton();
        jBPonyta.addFocusListener(new FocusAdapter() {
        	@Override
        	public void focusGained(FocusEvent e) {
        		jBPonytafocusGained(e);
        	}
        });
        jBPonyta.setBounds(98, 24, 47, 49);
        jBPonyta.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jBPonytaActionPerformed(e);
        	}
        });
       
        jBMankey = new javax.swing.JButton();
        jBMankey.addFocusListener(new FocusAdapter() {
        	@Override
        	public void focusGained(FocusEvent e) {
        		jBMankeyfocusGained(e);
        	}
        });
        jBMankey.setBounds(33, 24, 47, 49);
        jBMankey.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jBMankeyActionPerformed(e);
        	}
        });
        
        
        
        
        jBBulbasaur = new javax.swing.JButton();
        jBBulbasaur.addFocusListener(new FocusAdapter() {
        	@Override
        	public void focusGained(FocusEvent e) {
        		jBBulbasaurfocusGained(e); 		
        	}
        });
        jBBulbasaur.setBounds(163, 24, 47, 49);
        jBBulbasaur.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jBBulbasaurActionPerformed(e);
        	}
        });
        jBGeodude = new javax.swing.JButton();
        jBGeodude.addFocusListener(new FocusAdapter() {
        	@Override
        	public void focusGained(FocusEvent e) {
        		jBGeodudefocusGained(e);
        	}
        });
        jBGeodude.setBounds(98, 91, 47, 49);
        jBGeodude.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jBGeodudeActionPerformed(e);
        	}
        });
        jBSandshrew = new javax.swing.JButton();
        jBSandshrew.addFocusListener(new FocusAdapter() {
        	@Override
        	public void focusGained(FocusEvent e) {
        		jBSandshrewfocusGained(e);
        	}
        });
        jBSandshrew.setBounds(228, 24, 47, 49);
        jBSandshrew.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jBSandshrewActionPerformed(e);
        	}
        });
        jBGoldeen = new javax.swing.JButton();
        jBGoldeen.addFocusListener(new FocusAdapter() {
        	@Override
        	public void focusGained(FocusEvent e) {
        		jBGoldeenfocusGained(e);
        	}
        });
        jBGoldeen.setBounds(33, 91, 47, 49);
        jBPikachu = new javax.swing.JButton();
        jBPikachu.addFocusListener(new FocusAdapter() {
        	@Override
        	public void focusGained(FocusEvent e) {
        		jBPikachufocusGained(e);
        	}
        });
        jBPikachu.setBounds(163, 91, 47, 49);
        jBPikachu.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jBPikachuActionPerformed(e);
        	}
        });
        jBHoothoot = new javax.swing.JButton();
        jBHoothoot.addFocusListener(new FocusAdapter() {
        	@Override
        	public void focusGained(FocusEvent e) {
        		jBHoothootfocusGained(e);
        	}
        });
        jBHoothoot.setBounds(228, 91, 47, 49);
        jBHoothoot.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jBHoothootActionPerformed(e);
        	}
        });
        jBShellder = new javax.swing.JButton();
        jBShellder.addFocusListener(new FocusAdapter() {
        	@Override
        	public void focusGained(FocusEvent e) {
        		jBShellderfocusGained(e);
        	}
        });
        jBShellder.setBounds(98, 158, 47, 49);
        jBShellder.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jBShellderActionPerformed(e);
        	}
        });
        jBCaterpie = new javax.swing.JButton();
        jBCaterpie.addFocusListener(new FocusAdapter() {
        	@Override
        	public void focusGained(FocusEvent e) {
        		jBCaterpiefocusGained(e);
        	}
        });
        jBCaterpie.setBounds(163, 158, 47, 49);
        jBCaterpie.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jBCaterpieActionPerformed(e);
        	}
        });
        jPchat = new javax.swing.JPanel();
        jPchat.setBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null));
        jPpoke_escolhidos = new javax.swing.JPanel();
        jPpoke_escolhidos.setBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null));

        jBPonyta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/ponyta.gif"))); // NOI18N
        jBPonyta.setBorder(null);
        jBPonyta.setBorderPainted(false);

        jBMankey.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mankey.gif"))); // NOI18N
        jBMankey.setBorder(null);
        jBMankey.setBorderPainted(false);

        jBBulbasaur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/bulbasaur.gif"))); // NOI18N
        jBBulbasaur.setBorder(null);
        jBBulbasaur.setBorderPainted(false);

        jBGeodude.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/geodude.gif"))); // NOI18N
        jBGeodude.setBorder(null);
        jBGeodude.setBorderPainted(false);

        jBSandshrew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/sandshrew.gif"))); // NOI18N
        jBSandshrew.setToolTipText("");
        jBSandshrew.setBorder(null);
        jBSandshrew.setBorderPainted(false);

        jBGoldeen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/goldeen.gif"))); // NOI18N
        jBGoldeen.setBorder(null);
        jBGoldeen.setBorderPainted(false);
        jBGoldeen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGoldeenActionPerformed(evt);
            }
        });

        jBPikachu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/pikachu.gif"))); // NOI18N
        jBPikachu.setBorder(null);
        jBPikachu.setBorderPainted(false);

        jBHoothoot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/hoothoot.gif"))); // NOI18N
        jBHoothoot.setBorder(null);
        jBHoothoot.setBorderPainted(false);

        jBShellder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/shellder.gif"))); // NOI18N
        jBShellder.setBorder(null);
        jBShellder.setBorderPainted(false);

        jBCaterpie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/caterpie.gif"))); // NOI18N
        jBCaterpie.setBorder(null);
        jBCaterpie.setBorderPainted(false);
        
        JPanel panel = new JPanel();
        panel.setBorder(new EtchedBorder(EtchedBorder.RAISED, null, null));
        
        scrollPane = new JScrollPane();

        javax.swing.GroupLayout gl_jPchat = new javax.swing.GroupLayout(jPchat);
        gl_jPchat.setHorizontalGroup(
        	gl_jPchat.createParallelGroup(Alignment.TRAILING)
        		.addComponent(panel, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        		.addComponent(scrollPane, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
        );
        gl_jPchat.setVerticalGroup(
        	gl_jPchat.createParallelGroup(Alignment.TRAILING)
        		.addGroup(gl_jPchat.createSequentialGroup()
        			.addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(panel, GroupLayout.PREFERRED_SIZE, 56, GroupLayout.PREFERRED_SIZE))
        );
        
        jTAChat = new JTextArea();
        jTAChat.setEditable(false);
        scrollPane.setViewportView(jTAChat);
        panel.setLayout(null);
        
        jTFchat = new JTextField();
        jTFchat.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		JBEnviarChatActionPerformed(e);
        	}
        });
        jTFchat.setBounds(0, 12, 120, 32);
        panel.add(jTFchat);
        jTFchat.setColumns(10);
        
        JButton btnEnviar = new JButton("Enviar");
        btnEnviar.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		JBEnviarChatActionPerformed(e);
        	}
        });
        btnEnviar.setBounds(119, 15, 77, 25);
        panel.add(btnEnviar);
        jPchat.setLayout(gl_jPchat);
        
        button_0 = new JButton();
        button_0.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jB0ActionPerformed(e);
        	}
        });
        button_0.setBounds(31, 25, 47, 49);
        button_0.setBorderPainted(false);
        button_0.setBorder(null);
        
        button_1 = new JButton();
        button_1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jB1ActionPerformed(e);
        	}
        });
        button_1.setBounds(107, 25, 47, 49);
        button_1.setBorderPainted(false);
        button_1.setBorder(null);
        
        button_2 = new JButton();
        button_2.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jB2ActionPerformed(e);
        	}
        });
        button_2.setBounds(187, 25, 47, 49);
        button_2.setBorderPainted(false);
        button_2.setBorder(null);
        
        button_3 = new JButton();
        button_3.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jB3ActionPerformed(e);
        	}
        });
        button_3.setBounds(31, 86, 47, 49);
        button_3.setBorderPainted(false);
        button_3.setBorder(null);
        
        button_4 = new JButton();
        button_4.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jB4ActionPerformed(e);
        	}
        });
        button_4.setBounds(107, 86, 47, 49);
        button_4.setBorderPainted(false);
        button_4.setBorder(null);
        
        button_5 = new JButton();
        button_5.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jB5ActionPerformed(e);
        	}
        });
        button_5.setBounds(187, 86, 47, 49);
        button_5.setBorderPainted(false);
        button_5.setBorder(null);
        
        JPanel jPok = new JPanel();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jPpoke_escolhidos, 0, 0, Short.MAX_VALUE)
        					.addGap(215))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jPselecao, GroupLayout.PREFERRED_SIZE, 500, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)))
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jPchat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jPok, GroupLayout.PREFERRED_SIZE, 202, GroupLayout.PREFERRED_SIZE))
        			.addGap(24))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jPchat, GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(jPok, GroupLayout.PREFERRED_SIZE, 56, GroupLayout.PREFERRED_SIZE)
        					.addContainerGap())
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jPselecao, GroupLayout.PREFERRED_SIZE, 250, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(jPpoke_escolhidos, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPselecao.setLayout(null);
        jPselecao.add(jBMankey);
        jPselecao.add(jBPonyta);
        jPselecao.add(jBBulbasaur);
        jPselecao.add(jBSandshrew);
        jPselecao.add(jBGoldeen);
        jPselecao.add(jBShellder);
        jPselecao.add(jBCaterpie);
        jPselecao.add(jBGeodude);
        jPselecao.add(jBPikachu);
        jPselecao.add(jBHoothoot);
        
        jBPokeFoco = new JButton("");
        jBPokeFoco.setForeground(Color.LIGHT_GRAY);
        jBPokeFoco.setBounds(293, 17, 191, 190);
        jPselecao.add(jBPokeFoco);
        jBPokeFoco.setBackground(SystemColor.inactiveCaptionBorder);
        jPpoke_escolhidos.setLayout(null);
        jPpoke_escolhidos.add(button_1);
        jPpoke_escolhidos.add(button_2);
        jPpoke_escolhidos.add(button_3);
        jPpoke_escolhidos.add(button_4);
        jPpoke_escolhidos.add(button_5);
        jPpoke_escolhidos.add(button_0);
        jPok.setLayout(null);
        
        JButton btnOk = new JButton("OK");
        btnOk.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jBOkActionPerformed(e);
        	}
        });
        btnOk.setBounds(125, 12, 65, 32);
        jPok.add(btnOk);
        JButton jBSair = new JButton("Sair");
        jBSair.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		sair(e);
        	}
        });
        jBSair.setBounds(0, 12, 113, 32);
        jPok.add(jBSair);
        this.setLayout(layout);
    }// </editor-fold>//GEN-END:initComponents
    /*
     * Troca a imagem do jBPokeFoco de acordo com o botão de qual pokémon está com foco
     */
    private void setIconFocus(String img){
    	jBPokeFoco.setIcon(new javax.swing.ImageIcon(getClass().getResource(img)));
    }
    private String[][]vetPoke=new String[6][4];
    private int cont=0;
	/**Funcao que seta os pokemons que já foram escolhido de acordo com que os botoes selecionando sao acionados
	 * @param 1ºImagem pequena,2ºImagem grande,3ºImagem costas,4ºID
	 **/
    private boolean setIconePokemonsEscolhidos(String imgPqn,String imgGnd,String imgBck,String id) {
		int i=0;
		try{
			for(;vetPoke[i][0]!=null && i<6;i++);
		}catch(Exception e){
			
		}
		switch(i){
		case 0:
			button_0.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgPqn)));
			break;
		case 1:
			button_1.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgPqn)));
			break;
		case 2:
			button_2.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgPqn)));
			break;
		case 3:
			button_3.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgPqn)));
			break;
		case 4:
			button_4.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgPqn)));
			break;
		case 5:
			button_5.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgPqn)));
			break;
		default:
	        //JOptionPane.showMessageDialog(null, "Os 6 pokémons já foram selecionados");
			return false;
								
		}
		vetPoke[i][0]=imgPqn;
		vetPoke[i][1]=imgGnd;
		vetPoke[i][2]=imgBck;
		vetPoke[i][3]=id;
		cont++;
		return true;
	}
/*
 * Botao que escolhe o pokemon goldeen
 */
private void jBGoldeenActionPerformed(java.awt.event.ActionEvent evt) {
	if(this.setIconePokemonsEscolhidos("/Imagens/goldeen.gif","/Imagens/goldeenG.png","/Imagens/goldeenB.png","3")){
		jBGoldeen.setVisible(false);
	}
}
/**
 * Troca o icone de jBPokemonFoco para a imagem de goldeen
 * @param e Evento
 */
public void jBGoldeenfocusGained(FocusEvent e){
	this.setIconFocus("/Imagens/goldeenG.png");
}
/*
 * Botao que escolhe o pokemon mankey
 */
private void jBMankeyActionPerformed(java.awt.event.ActionEvent evt) {
	if(this.setIconePokemonsEscolhidos("/Imagens/mankey.gif","/Imagens/mankeyG.png","/Imagens/mankeyB.png","9")){
		jBMankey.setVisible(false);
	}

}
/**
 * Troca o icone de jBPokemonFoco para a imagem de mankey
 * @param e Evento
 */
public void jBMankeyfocusGained(FocusEvent e){
	this.setIconFocus("/Imagens/mankeyG.png");
}
/*
 * Botao que escolhe o pokemon ponyta
 */
private void jBPonytaActionPerformed(java.awt.event.ActionEvent evt) {
	if(this.setIconePokemonsEscolhidos("/Imagens/ponyta.gif","/Imagens/ponytaG.png","/Imagens/ponytaB.png","0")){
		jBPonyta.setVisible(false);
	}

}
/**
 * Troca o icone de jBPokemonFoco para a imagem de ponyta
 * @param e Evento
 */
public void jBPonytafocusGained(FocusEvent e){
	this.setIconFocus("/Imagens/ponytaG.png");
}
/*
 * Botao que escolhe o pokemon bulbasauro
 */
private void jBBulbasaurActionPerformed(java.awt.event.ActionEvent evt) {
	if(this.setIconePokemonsEscolhidos("/Imagens/bulbasaur.gif","/Imagens/bulbasaurG.png","/Imagens/bulbasaurB.png","2")){
		jBBulbasaur.setVisible(false);
	}

}
/**
 * Troca o icone de jBPokemonFoco para a imagem de bulbasauro
 * @param e Evento
 */
public void jBBulbasaurfocusGained(FocusEvent e){
	this.setIconFocus("/Imagens/bulbasaurG.png");
}
/*
 * Botao que escolhe o pokemon caterpie
 */
private void jBCaterpieActionPerformed(java.awt.event.ActionEvent evt) {
	if(this.setIconePokemonsEscolhidos("/Imagens/caterpie.gif","/Imagens/caterpieG.png","/Imagens/caterpieB.png","6")){
		jBCaterpie.setVisible(false);
	}

}
/**
 * Troca o icone de jBPokemonFoco para a imagem de caterpie
 * @param e Evento
 */
public void jBCaterpiefocusGained(FocusEvent e){
	this.setIconFocus("/Imagens/caterpieG.png");
}
/*
 * Botao que escolhe o pokemon geodude
 */
private void jBGeodudeActionPerformed(java.awt.event.ActionEvent evt) {
	if(this.setIconePokemonsEscolhidos("/Imagens/geodude.gif","/Imagens/geodudeG.png","/Imagens/geodudeB.png","4")){
		jBGeodude.setVisible(false);
	}

}
/**
 * Troca o icone de jBPokemonFoco para a imagem de geodude
 * @param e Evento
 */
public void jBGeodudefocusGained(FocusEvent e){
	this.setIconFocus("/Imagens/geodudeG.png");
}
/*
 * Botao que escolhe o pokemon hoothoot
 */
private void jBHoothootActionPerformed(java.awt.event.ActionEvent evt) {
	if(this.setIconePokemonsEscolhidos("/Imagens/hoothoot.gif","/Imagens/hoothootG.png","/Imagens/hoothootB.png","5")){
		jBHoothoot.setVisible(false);
	}

}
/**
 * Troca o icone de jBPokemonFoco para a imagem de hoothoot
 * @param e Evento
 */
public void jBHoothootfocusGained(FocusEvent e){
	this.setIconFocus("/Imagens/hoothootG.png");
}
/*
 * Botao que escolhe o pokemon pikachu
 */
private void jBPikachuActionPerformed(java.awt.event.ActionEvent evt) {
	if(this.setIconePokemonsEscolhidos("/Imagens/pikachu.gif","/Imagens/pikachuG.png","/Imagens/pikachuB.png","8")){
		jBPikachu.setVisible(false);
	}

}
/**
 * Troca o icone de jBPokemonFoco para a imagem de pikachu
 * @param e Evento
 */
public void jBPikachufocusGained(FocusEvent e){
	this.setIconFocus("/Imagens/pikachuG.png");
}
/*
 * Botao que escolhe o pokemon shellder
 */
private void jBShellderActionPerformed(java.awt.event.ActionEvent evt) {
	if(this.setIconePokemonsEscolhidos("/Imagens/shellder.gif","/Imagens/shellderG.png","/Imagens/shellderB.png","1")){
		jBShellder.setVisible(false);
	}

}
/**
 * Troca o icone de jBPokemonFoco para a imagem de shellder
 * @param e Evento
 */
public void jBShellderfocusGained(FocusEvent e){
	this.setIconFocus("/Imagens/shellderG.png");
}
/*
 * Botao que escolhe o pokemon sandshrew
 */
private void jBSandshrewActionPerformed(java.awt.event.ActionEvent evt) {
	if(this.setIconePokemonsEscolhidos("/Imagens/sandshrew.gif","/Imagens/sandshrewG.png","/Imagens/sandshrewB.png","7")){
		jBSandshrew.setVisible(false);
	}

}
/**
 * Troca o icone de jBPokemonFoco para a imagem de sandshrew
 * @param e Evento
 */
public void jBSandshrewfocusGained(FocusEvent e){
	this.setIconFocus("/Imagens/sandshrewG.png");
}
/*
 * Função que desmarca o pokemon que tinha sido escolhido na posição zero
 */
private void jB0ActionPerformed(java.awt.event.ActionEvent evt) {
	trocarPokemon(0);
	button_0.setIcon(null);
}
/*
 * Função que desmarca o pokemon que tinha sido escolhido na posição um
 */
private void jB1ActionPerformed(java.awt.event.ActionEvent evt) {
	trocarPokemon(1);
	button_1.setIcon(null);
}
/*
 * Função que desmarca o pokemon que tinha sido escolhido na posição dois
 */
private void jB2ActionPerformed(java.awt.event.ActionEvent evt) {
	trocarPokemon(2);
	button_2.setIcon(null);
}
/*
 * Função que desmarca o pokemon que tinha sido escolhido na posição tres
 */
private void jB3ActionPerformed(java.awt.event.ActionEvent evt) {
	trocarPokemon(3);
	button_3.setIcon(null);
}
/*
 * Função que desmarca o pokemon que tinha sido escolhido na posição quatro
 */
private void jB4ActionPerformed(java.awt.event.ActionEvent evt) {
	trocarPokemon(4);
	button_4.setIcon(null);
}
/*
 * Função que desmarca o pokemon que tinha sido escolhido na posição cinco
 */
private void jB5ActionPerformed(java.awt.event.ActionEvent evt) {
	trocarPokemon(5);
	button_5.setIcon(null);
}
/*
 * 
 * Envia o vetor com informações dos pokemons escolhidos para a tela de batalha também e envia uma mensagem para o servido<br>
 * avisa que terminou de escolher e está aguardando.
 *
 */


private void jBOkActionPerformed(java.awt.event.ActionEvent evt) {
	if(cont>5){
	Mensagens=jTAChat.getText();
	Mensagem m=new Mensagem(200,vetPoke[0][3]+":"+vetPoke[1][3]+":"+vetPoke[2][3]+":"+vetPoke[3][3]+":"+vetPoke[4][3]+":"+vetPoke[5][3]);
	tela.cliente.enviaMensagem(m);
	this.setEnabled(false);
	//AguardeDialog a=new AguardeDialog();
    //a.setVisible(true);
	}else{
		JOptionPane.showMessageDialog(null, "Não foram selecionados todos os pokemons");
	}
}
/**
 * Funcao que troca para a tela de batalha quando recebe uma mensagem do servidor com a lista de pokemons do outro jogador
 */
public void trocaBatalha(){
	Batalha b=new Batalha(tela,this,Mensagens,vetPoke);
	b.setBounds(0, 0, this.getWidth(), this.getHeight());
	b.setVisible(true);
	tela.setContentPane(b);

}

/**
 * Função que tira o pokemon da lista de pokemons escolhido e faz voltar a aparecer o botao para o pokemon que estava na lista
 * voltar a ser escolhido
 * @param i Posicao do vetor que foi liberada
 */
public void trocarPokemon(int i){
	String pok=vetPoke[i][0];
	if(vetPoke[i]==null){
		return;
	}
	if(pok.contains("mankey")){
		jBMankey.setVisible(true);
	}
	if(pok.contains("ponyta")){
		jBPonyta.setVisible(true);
	}
	if(pok.contains("pikachu")){
		jBPikachu.setVisible(true);
	}
	if(pok.contains("geodude")){
		jBGeodude.setVisible(true);
	}
	if(pok.contains("caterpie")){
		jBCaterpie.setVisible(true);
	}
	if(pok.contains("goldeen")){
		jBGoldeen.setVisible(true);
	}
	if(pok.contains("shellder")){
		jBShellder.setVisible(true);
	}
	if(pok.contains("bulbasaur")){
		jBBulbasaur.setVisible(true);
	}
	if(pok.contains("sandshrew")){
		jBSandshrew.setVisible(true);
	}
	if(pok.contains("hoothoot")){
		jBHoothoot.setVisible(true);
	}
	vetPoke[i][0]=null;
	cont--;
}
/**
 * Funcao que escreve uma mensagem recebida na tela de chat. jTAChat
 * @param s Mensagem recebida
 */
public void escreveChat(String s){
	if(tela.nomeAdversario!=null){
	jTAChat.append(tela.nomeAdversario+" : "+s+"\n");
	}
	else{
		jTAChat.append(s+"\n");
	}
}

/*
 * Função que pega o conteudo da caixa de texto do chat do usuario e envia para o outro jogador
 */
private void JBEnviarChatActionPerformed(ActionEvent e){
    
	jTAChat.append("eu: " + jTFchat.getText() + "\n");

    Mensagem m = new Mensagem(110,jTFchat.getText());
    tela.cliente.enviaMensagem(m);
    
    jTFchat.setText("");


}
/*
 * Função chamada quando o botão sair é acionado, faz aparecer tela com as opções de sair
 */
private void sair(ActionEvent e){
	Sair s = new Sair(tela);
	s.setVisible(true);
	
}





    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBulbasaur;
    private javax.swing.JButton jBCaterpie;
    private javax.swing.JButton jBGeodude;
    private javax.swing.JButton jBGoldeen;
    private javax.swing.JButton jBHoothoot;
    private javax.swing.JButton jBMankey;
    private javax.swing.JButton jBPikachu;
    private javax.swing.JButton jBPonyta;
    private javax.swing.JButton jBSandshrew;
    private javax.swing.JButton jBShellder;
    private javax.swing.JPanel jPselecao;
    private javax.swing.JPanel jPchat;
    private javax.swing.JPanel jPpoke_escolhidos;
    private JTextField jTFchat;
    private JButton button_0;
    private JButton button_1;
    private JButton button_2;
    private JButton button_3;
    private JButton button_4;
    private JButton button_5;
    private JButton jBPokeFoco;
    private JScrollPane scrollPane;
    private JTextArea jTAChat;
	
	
	
}
